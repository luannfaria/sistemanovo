<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Contasareceber extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Contasareceber_model');
    }

    /*
     * Listing of contasareceber
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE;
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('contaareceber/index?');
        $config['total_rows'] = $this->Contasareceber_model->get_all_contasareceber_count();
        $this->pagination->initialize($config);

        $data['contasareceber'] = $this->Contasareceber_model->get_all_contasareceber($params);

        $data['_view'] = 'contasareceber/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new contaareceber
     */
    function add()
    {
        $this->load->library('form_validation');

		$this->form_validation->set_rules('datavencimento','Datavencimento','required');
		$this->form_validation->set_rules('valorconta','Valorconta','required');

		if($this->form_validation->run())
        {
            $params = array(
				'datavencimento' => $this->input->post('datavencimento'),
				'datapagamento' => $this->input->post('datapagamento'),
				'valorconta' => $this->input->post('valorconta'),
				'desconto' => $this->input->post('desconto'),
				'valorpago' => $this->input->post('valorpago'),
				'idformapagamento' => $this->input->post('idformapagamento'),
				'status' => $this->input->post('status'),
				'datalanc' => $this->input->post('datalanc'),
				'descricao' => $this->input->post('descricao'),
				'numerodoc' => $this->input->post('numerodoc'),
				'tipomovimentacao' => $this->input->post('tipomovimentacao'),
				'clienteid' => $this->input->post('clienteid'),
            );

            $contaareceber_id = $this->Contasareceber_model->add_contaareceber($params);
            redirect('contasareceber/index');
        }
        else
        {
            $data['_view'] = 'contasareceber/add';
            $this->load->view('layouts/main',$data);
        }
    }
    function recebeconta($id){

date_default_timezone_set('America/Sao_Paulo');
      $params = array(
        'formarecebimento'=>$this->input->post('formarecebimento'),
         'datapagamento' =>  date('d/m/Y'),
         'valorpago' => $this->input->post('valorpago')

      );

      $null = $this->Contasareceber_model->update_contaareceber($id,$params);


      $tipomov='1';
      $descricao = "RECEBIMENTO REF ". $this->input->post('descricaoconta');
        $fluxo = array(
            'formapagto'=> $this->input->post('formarecebimento'),
            'data'=>  date('d/m/Y'),
            'valor'=>$this->input->post('valorpago'),
            'descricao'=>$descricao,
            'tipomovimentacao'=>$tipomov
        );

      $this->load->model('Caixa_model');
        $this->Caixa_model->add_caixa($fluxo);

      redirect('contasareceber/index');

    }
    /*
     * Editing a contaareceber
     */
    function edit($idcontasareceber)
    {
        // check if the contaareceber exists before trying to edit it
        $data['contaareceber'] = $this->Contasareceber_model->get_contaareceber($idcontasareceber);

        if(isset($data['contaareceber']['idcontasareceber']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('datavencimento','Datavencimento','required');
			$this->form_validation->set_rules('valorconta','Valorconta','required');

			if($this->form_validation->run())
            {
                $params = array(
					'datavencimento' => $this->input->post('datavencimento'),
					'datapagamento' => $this->input->post('datapagamento'),
					'valorconta' => $this->input->post('valorconta'),
					'desconto' => $this->input->post('desconto'),
					'valorpago' => $this->input->post('valorpago'),
					'idformapagamento' => $this->input->post('idformapagamento'),
					'status' => $this->input->post('status'),
					'datalanc' => $this->input->post('datalanc'),
					'descricao' => $this->input->post('descricao'),
					'numerodoc' => $this->input->post('numerodoc'),
					'tipomovimentacao' => $this->input->post('tipomovimentacao'),
					'clienteid' => $this->input->post('clienteid'),
                );

                $this->Contasareceber_model->update_contaareceber($idcontasareceber,$params);
                redirect('contasareceber/index');
            }
            else
            {
                $data['_view'] = 'contasareceber/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The contaareceber you are trying to edit does not exist.');
    }

    /*
     * Deleting contaareceber
     */
    function remove($idcontasareceber)
    {
        $contaareceber = $this->Contasareceber_model->get_contaareceber($idcontasareceber);

        // check if the contaareceber exists before trying to delete it
        if(isset($contaareceber['idcontasareceber']))
        {
            $this->Contasareceber_model->delete_contaareceber($idcontasareceber);
            redirect('contasareceber/index');
        }
        else
            show_error('The contaareceber you are trying to delete does not exist.');
    }

}
